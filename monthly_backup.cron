# Backup script that runs every month
#! /bin/bash

DAY=`date +%d`
MONTH=`date +%m`
YEAR=`date +%Y`

# Backup directory to use (/remote/home/fredju/backup/$YEAR/$MONTH/$DAY)
BKDES="/remote/home/fredju/backups/$YEAR/$MONTH/$DAY"

# Create directory if not found
if [ ! -d "$BKDES" ]; then
   mkdir -p $BKDES
fi

# Backup log file name
BKLOG="/remote/home/fredju/backups/$YEAR/$MONTH/$DAY.log"
ARRPOS=0

# Backup user drive only
# DRIVE=('sdb')
# BACKUP=('/home/fredju')

# Backup everything, do not skip!
# SDAEX=()

# Create the empty log file for the backup progress
#touch $BKLOG

echo "To: fred_ju@selinc.com" > $BKLOG
echo "From:Backups <backups@littlegrape>" >> $BKLOG
echo -e "Subject: Generated backup report for `hostname` on $YEAR.$MONTH.$DAYn" >> $BKLOG
echo -e ">> Backup for: $YEAR.$MONTH.$DAY started @ `date +%H:%M:%S`n" >> $BKLOG

# Checks to see if day = 12, and if so, backs up the last month's backups
if [ "$DAY" == "12" ]; then
        #M=`echo -n $MONTH | awk '{printf substr($1,2)}'`
        #let OLD=M-1

        echo "- New month detected.  Backing up previous month's ($MONTH) backups." >> $BKLOG
        echo "  + Backup file: /home/fredju/backups/$YEAR/$MONTH.tar.gz" >> $BKLOG
        SD=$( { time tar -cpPzf /remote/home/fredju/backups/$YEAR/$MONTH.tar.gz /home/fredju; } 2>&1 )

        # Got stats, delete folder
        rm -rf /remote/home/fredju/backups/$YEAR/$MONTH

        SD=`echo -n "$SD" | grep real`
        MIN=`echo -n "$SD" | awk '{printf substr($2,0,2)}'`
        SEC=`echo -n "$SD" | awk '{printf substr($2,3)}'`
        echo -e "- done [ $MIN $SEC ].n" >> $BKLOG
else
        echo -e "Not a backup day, nothing is backed up." >> $BKLOG
fi


# Cycle through each drive and back up each
#for d in "${DRIVE[@]}"; do
#        echo "- Backing up drive $d" >> $BKLOG
#
#        # By default, at least don't backup lost+found directories
#        EX="--exclude=lost+found"
#
#        # If we are backing up drive 1 (/dev/sda), there's to exclude
#        if [ $d == "sda" ]; then
#                for e in "${SDAEX[@]}"; do
#                        EX="`echo -n $EX` --exclude=$e"
#                done
#        fi
#
#        # Do the magic work and display some cool info
#        SD=$( { time tar -cpPzf $BKDIR/$d.tar.gz $EX ${BACKUP[$ARRPOS]}; } 2>&1 )
#        SD=`echo -n "$SD" | grep real`
#        MIN=`echo -n "$SD" | awk '{printf substr($2,0,2)}'`
#        SEC=`echo -n "$SD" | awk '{printf substr($2,3)}'`
#        SD=$(ls -liha $BKDIR/$d.tar.gz)
#        SIZE=`echo -n $SD | awk '{printf $6}'`
#
#        let ARRPOS++
#done

# Add a split line
echo -e "--------------------------------------\n" >> $BKLOG

# Mail it to me
mutt fred_ju@selinc.com < $BKLOG

